# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # gradle wrapper 실행권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # gradle build
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    # jar 파일 actions의 artifact에 업로드
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: completeServer
        path: build/libs/challang-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    
    # actions의 artifact에서 jar 다운로드
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: completeServer
        path: build/libs/

    # EC2에 배포
    # SCP를 통해 EC2에 jar 파일 전송
    # SSH로 접속하여 jar 파일 실행 (2>&1 로그저장: 표준에러[2], 표준출력[1])
    - name: Deploy to EC2
      run: |
        echo "${{ secrets.EC2_DEV_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/challang-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_DEV_USERNAME }}@${{ secrets.EC2_DEV_HOST }}:/home/${{ secrets.EC2_DEV_USERNAME }}/challang.jar
        ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_DEV_USERNAME }}@${{ secrets.EC2_DEV_HOST }} "pgrep java | xargs kill -9; nohup java -jar /home/${{ secrets.EC2_DEV_USERNAME }}/domain.jar > app.log 2>&1 &"
        rm -f private_key.pem
